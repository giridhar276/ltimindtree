
C - datatypes
------------------
int a = 10;
float
char
double
long
short

Everything in python is object
Every object contains methods

python - objects
--------------------

number
------
number can be integer or decimal or octal or hexa.

a = 10
aval = 34.3
bval = 34

string
-------
string is defined in single or double or triple quotes.

aname = 'python programming'
bname = "java programming"
cname = """r programming"""
dname = '''scala programming'''

list ( array in C )
------
list contains set of elements.
Elements can be numbers or strings or any combination.
list is defined in [].

alist = [10,20,30,40]
blist = ["java","unix","scala"]
clist = [[10,20],[30,40]]  # list of lists


tuple ( immutable   unchangeable  uneditable )
-----
tuple contains set of elements.
Elements can be numbers or strings or any combination.
tuple is defined in ().
***** elements inside tuple cant be modified directly ******

atup = (10,20,30,40)
btup = ("java","c","cpp")
ctup = ((10,20),(30,40),34,45.34,"unix")


dictionary
--------------
dictionary contains key value pairs.
dictionary is defined in {}.
In dictionary , keys are always UNIQUE
                key can be either number or string
                value can be number,string,list,tuple,dictionary or any other datastructure.
    

Syntax:   object = {key:value  , key:value , key:value }
	    book = {"chap1":10, "chap2":20 , "chap3":30 }
            data = {1:2,3:4,5:6}
            book = {"chap1":["rita","UK"], "chap2":["gita","US"] }

book
-----
chap1	10
chap2 	20
chap3 	30
chap4	40



set (  venn diagrams )
-----
set is UNORDERED collection of UNIQUE items of SAME type.


aset = {10,10,10,20,20,30}





if ( a < b) 
{
}



for ( i = 1; i<=10 ; i++ )
{

}



there are two ways of commenting

1. using #
2. using """ 

# this is single line comment


"""
this is multiline
comment

"""




functions
-------------
- builtin functions
- user defined functions


- builtin functions
------------------
print()
input()
id()
max()
min()
sum()
range()
zip()
dir()
help()
type()
isinstance()
map()
filter()

int()
float()
str()
list()
tuple()
dict()
set()
oct()

How to display all the builtin functions?
-----------------------------------------
In the console ( interactive prompt)

dir(__builtins__)  -----> will display all builtin functions and exception names














